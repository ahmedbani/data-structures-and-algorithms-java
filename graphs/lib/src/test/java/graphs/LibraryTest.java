/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package graphs;

import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

class LibraryTest {
    @Test void graphArrayListTest() {
        Graph graph = new Graph();
        Node n1 = new Node("A");
        Node n2 = new Node("B");
        Node n3 = new Node("C");
        Node n4 = new Node("D");

        assertEquals("[]", graph.graphList.toString());
        graph.addNode(n1);
        assertTrue(graph.graphList.contains(n1)); //check if the node is inside the list
        graph.addNode(n2);
        assertTrue(graph.graphList.contains(n2)); //checking the second one if it is inside the array as well
        graph.addNode(n3);
        graph.addNode(n4);

        assertEquals("[A, B, C, D]", graph.toString()); //this will check if the getNodes works correctly

        assertEquals(4, graph.size()); //this will check if the size method works correctly
    }
    @Test void graphBreadthFirstTest() {
        Graph graph = new Graph();
        Node n1 = new Node("A");
        Node n2 = new Node("B");
        Node n3 = new Node("C");
        Node n4 = new Node("D");

        graph.addNode(n1);
        graph.addNode(n2);
        graph.addNode(n3);
        graph.addNode(n4);

        assertEquals("[A]", graph.breadthFirst(n1).toString());
        graph.addEdge(n1, n2);
        assertEquals("[A, B]", graph.breadthFirst(n1).toString());
        graph.addEdge(n1, n3);
        assertEquals("[A, B, C]", graph.breadthFirst(n1).toString());
        graph.addEdge(n1, n4);
        assertEquals("[A, B, C, D]", graph.breadthFirst(n1).toString());
        assertEquals("[B, C, D]", graph.breadthFirst(n2).toString());
        assertEquals("[C, D]", graph.breadthFirst(n3).toString());
        assertEquals("[D]", graph.breadthFirst(n4).toString());
    }

}
